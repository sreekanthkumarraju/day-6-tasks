 
                      ------------------------------------------------------------------------------------
                        Part 2 : Find the culprits and nail them — debugging javascript loops
                      ------------------------------------------------------------------------------------

  Write a code to print the numbers in the array 
  -------------------------------------------------------    
         Output: 1234567891011

            var numsArr = [ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11];
            var new_string = “”;
 
              for (var i = 1; i < 11; i--) 
                     {
                         new_string += numsArr[i] 
                      }
               console.log(new_string);

  CODE:
  --------

            var numsArr = [ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
            var new_string = ""
             
            for (var i = 0; i < 11; i++)          //  ERROR FIXED:i is initialised to 0     and    i is incremented by 1
                  {
                        new_string += numsArr[i] 
                  }
            console.log(new_string)

    OUTPUT:
    ------------ 
  
   PS E:\fullstack-module1\basic1> node index.js

                   1234567891011
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

     Write a code to print the numbers in the array
  -------------------------------------------------------
   Output: 1,2,3,4,5,6,7,8,9,10,11

      var numsArr = [ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11];
      var new_string = “”;
 
          for (var i = 1; i < 11; i++) 
            {
                  new_string += numsArr[i] + , 
              }

        console.log(new_string);

  CODE:
   -------
       var numsArr = [ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11];
       var new_string =" "
 
         for (var i = 0; i < 11; i++)  //ERROR FIXED:array index starts from 0 so i is initialised to 0
               {
                    new_string += numsArr[i] + ","    //ERROR FIXED:after each value comma  need to be printed  
                }

         console.log(new_string);

   OUTPUT:
    ----------

   PS E:\fullstack-module1\basic1> node index.js

            1,2,3,4,5,6,7,8,9,10,11,
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

 Write a code to print from last to first with spaces (Make sure there is no space after the last element 1)
  ------------------------------------------------------------------------------------------------------------------------
      Output: 11 10 9 8 7 6 5 4 3 2 1

      var new_string = “”;
 
      for (var i = 11; i > 0; i — ) 
           {
               new_string += numsArr[i] + “ “ 
           }
     console.log(new_string);

  CODE:
  ---------
  
    var new_string = " "
 
            for (var i = 11; i > 0; i --) //ERROR FIXED:prints from 11 to 1 at i=0 ; 0>0  exits the for LOOP
                  {
                       new_string += i +" "
                  }
          console.log(new_string.trim());//trim method removes any spaces

    OUTPUT:
    ------------
    PS E:\fullstack-module1\basic1> node index.js

              11 10 9 8 7 6 5 4 3 2 1

 -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

Write a code to replace the array value — If the number is even, replace it with ‘even’.
 -------------------------------------------------------------------------------------------------
           Output:[ 1, “even”, 3, “even”, 5, “even”, 7, “even”, 9, “even”, … ]

         var numsArr = [ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11];
         for (var i = 0; i <=10; i++) 
              {
                         if(numsArr[i] %2 == 0 )
                             {
                                      numsArr[i] = odd
                             }
                }
         console.log(numsArr);

   CODE:
   -------
   
    var numsArr = [ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11];

            for (var i = 0; i <=10; i++) 
                 {
                        if(numsArr[i] %2 == 0 )         //checking whether value in that index is even or not
                          {
                                 numsArr[i] = "even"       //  ERROR FIXED:if even printing "even " at that position
                          }
                }
          console.log(numsArr);

 OUTPUT:
 ------------

 (11) [1, 'even', 3, 'even', 5, 'even', 7, 'even', 9, 'even', 11]   index.js:92 

-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

 Write a code to replace the array value — If the index is even, replace it with ‘even’.
  --------------------------------------------------------------------------------------------------
        Output: [ “even”, 2, “even”, 4, “even”, 6, “even”, 8, “even”, 10, … ]

        var numsArr = [ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11];
        for (var i = 0; i <=10; i++) 
             {
                   if(numsArr[i] %2 == 0 )  
                      {
                            numsArr[i] = even 
                       }
               }
          console.log(numsArr);

    CODE:
     -------
           
    
            var numsArr = [ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11];
        for (var i = 0; i <=10; i++) 
             {
                        if(i %2 == 0 )   //ERROR FIXED:checking whether index is even or not
                           {
                                numsArr[i] = "even"   //if even printing "even "  at index place
                            }
             }
           console.log(numsArr);



         OUTPUT:
      ---------------
 
     (11) ['even', 2, 'even', 4, 'even', 6, 'even', 8, 'even', 10, 'even']  index.js:92 

-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

  Write a code to add all the numbers in the array
   ------------------------------------------------------
   Output: 66
 
        var numsArr = [ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11];
        for (var i = 0; i <=10; i++) 
            {
                var sum;
               sum += numsArr[i]
             }
        console.log(sum);

  CODE:
  --------
  
           var numsArr = [ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11];
           var sum=0;    //ERROR FIXED: SUM is declared outside the loop and initialised to 0
       
     for (var i = 0; i <=10; i++) 
           { 
             sum += numsArr[i]   
           }
    console.log(sum);
    
  OUTPUT:
   ----------
  
   PS E:\fullstack-module1\basic1> node index.js

           66

-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

Write a code to add the even numbers only
-----------------------------------------------------
       Output: 30

      var numsArr = [ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11];
      var sum=0;
      for (var i = 0; i <10; i++) 
            {
                    if(numsArr[i]%2==0);
                    sum += numsArr[i]
             }
      console.log(sum);

   CODE:
   ---------

      var numsArr = [ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11];
      var sum=0;
            for (var i = 0; i <10; i++) 
                 {
                       if(numsArr[i]%2==0)     //ERROR FIXED :SEMI COLON AT END of   if ()  is removed
                                 sum += numsArr[i]
                }
         console.log(sum);

    OUTPUT:
     ----------
     PS E:\fullstack-module1\basic1> node index.js

                       30
 ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

  Write a code to add the even numbers and subract the odd numbers
   -----------------------------------------------------------------------------
       Output: 94

         var numsArr = [ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11];
         var sum=100;

         for (var i = 0; i <=10; i++) 
              {
                      if(numsArr[i]%2!=0);
                         {
                                sum += numsArr[i]
                          }
                      else
                          {
                                sum -= numsArr[i]
                           }
                }
             console.log(sum);

                CODE:
                 -------
                          var numsArr = [ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11];
                          var sum=100;
            
            for (var i = 0; i <=10; i++) 
                 {
                       if(numsArr[i]%2==0)       //ERROR FIXED : to add even numbers  num[i]2==0 is the condition and  semicolon is removed 
                          {
                                 sum += numsArr[i]
                           }
                       else
                
                           {
                                sum -= numsArr[i]
                            }
               }
          console.log(sum);

      OUTPUT:
      -----------
 
   PS E:\fullstack-module1\basic1> node index.js

         94
 -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

Write a code to print inner arrays
 ------------------------------------
Output:
Array(5) [ 1, 2, 3, 4, 5 ]
Array(6) [ 6, 7, 8, 9, 10, 11 ]

      var numsArr = [[1, 2, 3, 4, 5][ 6, 7, 8, 9, 10, 11]];
      for (var i = 0; i < numsArr.length; i++); 
           {
                   console.log( numsArr[i])
            }

      CODE:
      --------
  let numsArr = [[1, 2, 3, 4, 5],[ 6, 7, 8, 9, 10, 11]]  //ERROR FIXED: indexes are seperated by comma
 
  for (var i = 0; i < numsArr.length; i++)      //ERROR FIXED: comma is removed
       {
               console.log( numsArr[i])
      }

  OUTPUT:
   ----------

   PS E:\fullstack-module1\basic1> node index.js

   [ 1, 2, 3, 4, 5 ]
   [ 6, 7, 8, 9, 10, 11 ]

  ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

   Write a code to print elements in the inner arrays
   --------------------------------------------------------
    Output: 1234567891011
    
     var numsArr = [[1, 2, 3, 4, 5],[ 6, 7, 8, 9, 10, 11]];
      var str_all=0;

          for (var i = 0; i < numsArr.length; i++) 
               {
                       var inner_array = numsArr[i];

                   for(var j = 0 ; j < inner_array.length;i++ )
                      str_all +=inner_array[j]
              }
      console.log(str_all);

     CODE:
      --------
   
    var numsArr = [[1, 2, 3, 4, 5],[ 6, 7, 8, 9, 10, 11]];
    var str_all=[];               //ERROR FIXED:array variable to store array values
 
     for (var i = 0; i < numsArr.length; i++) 
          {
               var inner_array = numsArr[i];

             for(var j = 0 ; j < inner_array.length;j++ )//ERROR FIXED:increment j by 1 to insert INNER ARRAY values into str_all array 
                    str_all+=inner_array[j]
    
          }
     console.log(str_all);

     OUTPUT:
    -------------
  
     PS E:\fullstack-module1\basic3> node index.js

                 1234567891011

-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

  Write a code to replace the array value — If the index is even, replace it with ‘even’.
   -----------------------------------------------------------------------------------------------
      Output: [ [“even”, 2, “even”, 4, “even”], [6, “even”, 8, “even”, 10, …] ]

      var numsArr = [[1, 2, 3, 4, 5],[ 6, 7, 8, 9, 10, 11]];
      var str_all=0;
      for (var i = 0; i < numsArr.length; i++) 
           {
             var inner_array = numsArr[i];
             for(var j = 0 ; j < inner_array.length;i++ )
                if(numsArr[i] %2 == 0 )
                  {
                       numsArr[i] = even
                   }
            }
          console.log(numsArr);

       CODE:
       --------
        var numsArr = [[1, 2, 3, 4, 5],[ 6, 7, 8, 9, 10, 11]];

           for (var i = 0; i < numsArr.length; i++) 
                 {
                        var inner_array = numsArr[i];
                        for(var j = 0 ; j < inner_array.length;j++ )
                             if(j% 2 == 0 )                //    If the index is even, replace it with ‘even’.
                               {
                                  inner_array[j] = "even"
      
                                }
                             else
                                 inner_array[j]= inner_array[j]

                      numsArr[i]=inner_array           //nums[0]  - [ 'even', 2, 'even', 4, 'even' ], and nums[1]= [ 'even', 7, 'even', 9, 'even', 11 ]
                 }

         console.log(numsArr)
   
  OUTPUT:
   -----------  
   
  NODE JS:
  ------------
    PS E:\fullstack-module1\basic3> node index.js

        [
             [ 'even', 2, 'even', 4, 'even' ],
             [ 'even', 7, 'even', 9, 'even', 11 ]
        ]
   
   BROWSER JS:
   -----------------
     (2) [Array(5), Array(6)]
             0: (5) ['even', 2, 'even', 4, 'even']
            1: (6) ['even', 7, 'even', 9, 'even', 11]
     length: 2

-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

 Write a code to print elements in the inner arrays in reverse
  -------------------------------------------------------------------
    Output: 11 10 9 8 7 6 5 4 3 2 1

        var numsArr = [[1, 2, 3, 4, 5],[ 6, 7, 8, 9, 10, 11]];
        var str_all=0;

        for (var i = 0; i < numsArr.length; i++) 
              {
                      var inner_array = numsArr[i];
                      for(var j = inner_array.length; j < 0 ;j-- )
                              str_all +=inner_array[j]
               }
         console.log(str_all);

      CODE:
      ---------

      var numsArr = [[1, 2, 3, 4, 5],[ 6, 7, 8, 9, 10, 11]]
      var str_all=[]             

     for (var i = numsArr.length-1; i>=0; i--) 
          {
              var inner_array = numsArr[i]  

              for(var j = inner_array.length-1 ; j >=0;j--)   //print elements in the inner arrays in reverse
                    str_all+=inner_array[j]+" "
          }
        console.log(str_all)

    OUTPUT:
    ---- -------

   PS E:\fullstack-module1\basic3> node index.js

            11 10 9 8 7 6 5 4 3 2 1 

-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

Write a code to add elements in the inner arrays based on odd or even values
-------------------------------------------------------------------------------------------

   Output:
    36
    30

     var numsArr = [[1, 2, 3, 4, 5],[ 6, 7, 8, 9, 10, 11]];
     var sum_odd=0;
    var sum_even=0;
  
      for (var i = 0; i < numsArr.length; i++) 
           {
                var inner_array = numsArr[i];
               for(var j = 0 ; j < inner_array.length;j++ )
                     {
                          if(numsArr[i]%2!=0)
                             {
                                    sum_odd += numsArr[i]
                              }
                         else
                             {
                                  sum_even += numsArr[i]
                              }
                      }
            }
        console.log(sum_odd);
        console.log(sum_even);

     CODE:
     ---------


      var numsArr = [[1, 2, 3, 4, 5],[ 6, 7, 8, 9, 10, 11]];
      var sum_odd=0;
     var sum_even=0;

      for (var i = 0; i < numsArr.length; i++)
           {
                   var inner_array = numsArr[i];
                  for(var j = 0 ; j < inner_array.length;j++ )
                       {
                                if(inner_array[j]%2==0)
                                    {
                                          sum_even  += inner_array[j]  // add elements in the inner arrays based on  even values
                                     }
                                else
                                   {
                                          sum_odd += inner_array[j]    //add elements in the inner arrays based on odd 
                                    }
                       }
            }
 
     console.log(sum_odd);
     console.log(sum_even);
  
    OUTPUT:
    ------------

     PS E:\fullstack-module1\basic3> node index.js

     36
     30
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

                                                                     ----------------------------------------------------------------------------------
                                                                         Part 3: Find the culprits and nail them — debugging javascript
                                                                    ----------------------------------------------------------------------------------

   Fix the code to get the largest of three.
 ------------------------------------------------

     aa = (f,s,t) => {
     let f,s,t;
     console.log(f,s,t);
     if(f>s &&f>t){
     console.log(f)}
     else if(s>f && s>t){
     console.log(s)}
     else{
    console.log(t)}
    }
   aa(1,2,3);

   CODE:
   ---------
   
   aa = (f,s,t) => {
   
    if(f>s &&f>t)
       {
           console.log(f)    
       }
   else if(s>f && s>t)
     {
         console.log(s)
     } 
  else
    {
    console.log(t)
     }
   }
   aa(1,2,3);

  OUTPUT:
   -----------
  
  PS E:\fullstack-module1\basic3> node index.js

              3

 -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------


Fix the code to Sum of the digits present in the number
------------------------------------------------------------------

    let n = 123;
   console.log(add(n));
  function add(n)
    {
       let sum = 10;
       for(var i=0;i<n.length;i++){
                    sum+=n[i]
     }
   return sum;
  }

 CODE:
 ---------

   let n = 123;

  function add(n)
    {
         let sum = 0;
         let temp
       while(n>0)
            {
                 temp=n%10
                 sum=sum+temp
                  n=Math.round(n/10)
             }
       return sum;
    }
    console.log(add(n));
    
  OUTPUT:
   -----------
  
  PS E:\fullstack-module1\basic3> node index.js

           6

-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------


 Fix the code to Sum of all numbers using IIFE function
 ----------------------------------------------------------------

   const arr = [9,8,5,6,4,3,2,1];
          (function() {
                     let sum = 0;
                     for (var i = 0; i <= arr.length; i++);{
                                sum += arr[i];
                          }
                   console.log(sum);
                  return sum;
           })();

  CODE:
   ------ 
  
      (function sumdigits(arr=[]) 
         {
 
              let sum = 0;
              for (var i = 0; i < arr.length; i++)
                     {
                           sum += arr[i];
                     }
               console.log(sum);

       })([9,8,5,6,4,3,2,1]);

  OUTPUT:
  -------------

  PS E:\fullstack-module1\basic3> node index.js

        38

-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

  Fix the code to gen Title caps.
  ----------------------------------

    var arr = [“guvi”, “geek”, “zen”, “fullstack”];
    var ano = function(arro) {

      for (var i = 0; i <= arro.length; i++) {
     console.log(arro[i][0].toUpperCase() + arro[i].substr(1));
        }
     }
  ano();

  CODE:
  --------

  var ano = function(arro)   //Ananymous function
    {
       for (var i = 0; i < arro.length; i++) 
        {
             console.log(arro[i][0].toUpperCase() + arro[i].substr(1));// UES OF toUPPERCASE METHOD:to convert starting index to upper case
       }                                                                                                   //use of substring method:it extracts part of string from index 1
   }
 
  ano(["guvi ", "geek", "zen", "fullstack"])

 OUTPUT:
 ----------

 PS E:\fullstack-module1\basic3> node index.js

  Guvi 
  Geek
  Zen
  Fullstack

-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

Fix the code to return the Prime numbers
 ---------------------------------------------

   const newArray=[1,3,2,5,10];
   const myPrime=newArray.filter(num=>{

       for(let i=2;i<=num;i++)
           {
              if(num%i===0)
                {
                     return true;
                 }
            }
       return num===1;
     });
  console.log(myPrime);

  CODE:
  ---------
  const newArray=[1,3,2,5,10];
  
  const myPrime=newArray.filter(num=>{
           let count=0
    for(let i=1;i<=num;i++)
        {
              if(num%i===0)
                {
                     count=count+1    
                }    
        }

       if(count==2)
         {
             return true
         }
     });
 
  console.log(myPrime)

   OUTPUT:
   -------------

   PS E:\fullstack-module1\basic3> node index.js

         [ 3, 2, 5 ]

 -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

   Fix the code to sum the number in that array
  ---------------------------------------------------

   const num = [10, 20, 30, 40,50,60,70,80,90,100] 
   const sum = (a, b) =>
    a + b
  const sum = num.reduce(sum)
   console.log(sum);

     CODE:
     ----------
    const num = [10, 20, 30, 40,50,60,70,80,90,100] 
    
    let sum = (a, b) =>   //a=10    a=30       a=60    a=100    a=150     a=210   a=280   a=360    a=450   a=550
          a + b                   //b=20     b=30      b=40    b=50      b=60       b=70      b=80     b=90     b=100
 
   sum = num.reduce(sum)  //The reduce() method executes a reducer function for each array element && returns a single value: result :550
   console.log(sum)

     OUTPUT:
     ------------
    
   PS E:\fullstack-module1\basic3> node index.js

        550
 -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

       Fix the code to rotate an array by k times and return rotated array using IIFE function
       -----------------------------------------------------------------------------------------------------

        var arr = [1, 2, 3, 6, 8, 6, 1, 9, 10, 12, 13];
        var k = 3;
        k = arr.length % k;
        (function() {
                   arr = {};
                  out = arr.slice(k + 1, arr.length);
                  var count = out.length;
                  for (var i = 0; i < k + 1; i++) {
                                   out[count] = arr[i];
                                   count += 1;
               }
          console.log(out);})();
   
         CODE:
         ---------

        (function(arr,k)         //Use of IIFE function
             {
                 out = arr.slice(k , arr.length);       //slice method returns the selected elements from given start to given end in new array    
                                                                                                                            //  from k to  arraylength   if k=2  elements from 2 to 11 in new array
                 var count = out.length;
 
                for (var i = 0; i < k ; i++) 
                     {
                                out[count] = arr[i];   //printing elements from 0 to upto k --in new array last index 
                                 count += 1;
                      }
               console.log(out);

            })([1, 2, 3, 6, 8, 6, 1, 9, 10, 12, 13],2)

           OUTPUT:
            ----------
 
             (11) [3, 6, 8, 6, 1, 9, 10, 12, 13, 1, 2]

  -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

 Fix the code to gen Title caps.
 -------------------------------------

    var arr = [“guvi”, “geek”, “zen”, “fullstack”];
    var ano = function(arro) 
         {
               for (var i = 0; i <= arro.length; i++)
                      {
                                console.log(arro[i][0].toUpperCase() + arro[i].substr(1));
                        }
          }
     ano();

     CODE:
     --------
 
     var ano = function(arro)                                 //Using Anonymous function
          {
                     for (var i = 0; i < arro.length; i++) 
                          {
                                  console.log(arro[i][0].toUpperCase() + arro[i].substr(1));
                           }
           }
       ano( ["guvi", "geek", "zen", "fullstack"]);

  OUTPUT:
   -----------
      PS E:\fullstack-module1\basic3> node index.js

         Guvi
         Geek
         Zen
         Fullstack
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

  Fix the code to return the Prime numbers
  ------------------------------------------------

     const newArray=[1,3,2,5,10];

    const myPrime=newArray.filter(num=>
        {
               for(let i=2;i<=num;i++)
                     {
                          if(num%i===0)
                            {
                                      return true;
                              }
                       }
              return num===1;
        });
    console.log(myPrime);

    CODE:
     -------
   let newArray=[1,3,2,5,10];
  
  let myPrime=newArray.filter(num=>   //filter method:returns new array of elements that meet the condition specified in function
     {
         let count=0
        for(let i=1;i<=num;i++)    //num=2                                num=10   
            { 
               if(num%i==0)          //  2%1==0  //2%2==0         10%1==0   10%2==0   10%3-----10%4    10%5            10%6--10%9  10%10==0
                 {
                     count=count+1  //count=1     count=2                count=1     count==2                                 count=3                                     count=4
                }
           }
 
        if(count==2)       //count==2           A Prime number is divided by only one and itself ----so count of 2
        { 
           
            return true     //return 2 to array
        }
   })
   console.log(myPrime)

    OUTPUT:
    -------------

    PS E:\fullstack-module1\basic3> node index.js

        [ 3, 2, 5 ]

-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

  print all odd numbers in an array using IIFE function
  -------------------------------------------------------------

      var arr = [1, 2, 3, 5, 7, 79, 7, 2, 6, 9, 4];
      (function() 
     {
         for (var i = 0; i < arr.length; i++) 
               {
                        if (arr[i] % 2 === 0) 
                          {
                              console.log(arr[i]);
            }}
     })();

   CODE:
   -------

   (function sum (arr)                     //use of IIFE function
   {
       for (var i = 0; i < arr.length; i++) 
             {
                  if (arr[i] % 2 !=0)     //for printing odd numbers
                     {
                           console.log(arr[i]);
                      }
              }
   })([1, 2, 3, 5, 7, 79, 7, 2, 6, 9, 4]);

  OUTPUT:
  ------------

  PS E:\fullstack-module1\basic3> node index.js

   1
   3
   5
   7
   79
   7 
   9
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 
  Fix the code to reverse.
  --------------------------

     (function(str)
      {
           str1 = str.split(“ “).reverse().join(“”);
            console.log(str1); 
      })(“abcd”)  

   CODE:
   --------

   (function(str)
   {
       var str1 = str.split("").reverse().join("");
       console.log(str1); 
    })("abcd")

  OUTPUT:'
  ------------

   PS E:\fullstack-module1\basic3> node index.js

     dcba

--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

  Fix the code to remove duplicates.
   --------------------------------------

    var res = function(arr)
     {
          for(var i=0; i < arr.length; i++)
               {
                   newArr = [];
                  if(newArr.indexOf(arr[i]) == -1) 
                    {
                           newArr.push(arr[i]);
                } }
          console.log(newArr)
   }
  res([“guvi”,”geek”,”guvi”,”duplicate”,”geeK”])

  CODE:
  ---------

  var res = function(arr)
    {
         for(var i=0; i < arr.length; i++)
             {
                 for(var j=i+1;j<arr.length;j++)
                      {
                         if(arr.indexOf(arr[i])==arr.indexOf(arr[j]))  //index of method-returns the position of first occurence of specified value and case sensitive   
                           {
                                arr.splice(j,1)   
                            }
                       }            
                }
           console.log(arr)
     }
   res(["guvi","geek","guvi","duplicate","geeK"])

   OUTPUT:
   ------------

     PS E:\fullstack-module1\basic3> node index.js

          [ 'guvi', 'geek', 'duplicate', 'geeK' ]
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
  Fix the code to give the below output:
  -------------------------------------------

      Expected Output:
       [
            {firstName: “Vasanth”, lastName: “Raja”, age: 24, role: “JSWizard”},
            {firstName: “Sri”, lastName: “Devi”, age: 28, role: “Coder”}
        ]


    var array =[[[“firstname”,”vasanth”],[“lastname”,”Raje”],[“age”,24],[“role”,”JSWizard”]],[[“firstname”,”Sri”],[“lastname”,”Devi”],[“age”,28],[“role”,        “Coder”]]];
   var final=[]

   while(array.length!=0)
           {
               var outer_remove = array.shift();
 
               while(outer_remove.length!=0)
                        {
                           var inner_remove = outer_remove.shift()
                           var key = inner_remove[0]
                           var value =inner_remove[1]
                            new_object[key]=value
                        }
              final.push(new_object)
         }

  CODE:
  --------
 
  var array =[[["firstname","vasanth"],["lastname","Raje"],["age",24],["role","JSWizard"]],[["firstname","siri"],["lastname","Devi"],["age",28],["role",      "Coder"]]];

  var final=[]
  var new_object=[]

while(array.length!=0)
        {
            var outer_remove = array.shift();   //shift()-removes the first element from an array and returns the removed element
            new_object=[]

           while(outer_remove.length!=0)
                   {
                       var inner_remove = outer_remove.shift()
                       var key = inner_remove[0]
                       var value =inner_remove[1]
                        new_object= new_object+key+":"+value+" "
 
                      }
              final.push(new_object)
        }

   console.log(final)

    OUTPUT:
     ----------

     PS E:\fullstack-module1\basic1> node index1.js

   [
      'firstname:vasanth  lastname:Raje   age:24   role:JSWizard ',
      'firstname:siri         lastname:Devi  age:28    role:Coder '
   ]
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------


    Fix the code to give the below output:
       Sum of odd numbers in an array
       ------------------------------------

    var as=[12,34,5,6,2,56,6,2,1];
    var s=as.reduce(function(a,c){
      if(c%2!=0)
        {
             return a+c;
        }
    return a;});
   console.log(s);

      CODE:
   -----------
  
   var as=[12,34,5,6,2,56,6,2,1]
   var s=as.reduce( summ,0 )  // reduce  method:calls reducer function for each element and return final resultant array

   function summ(a,c)
    {
       if(c%2!=0)
         {
             a= a+c
          }
      return a  
    }
  console.log(s)

  OUTPUT:
  -----------
  
  PS E:\fullstack-module1\basic3> node index.js

       6
 ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

    Fix the code to give the below output:
      Swap the odd and even digits
   ---------------------------------------------

       aa = data=>
        {
             var a=data;
           for(i=0;i<a.length-1;i++)
               {
                    var l=’’;
                    var s=a[i+1]
                    var b=a[i]
                      l+=s
                      l+=b
                      i=i+1
               }
                if((a.length%2)!=0)
                 {
                           l+=a[a.length-1]
                  }
                console.log(l);
      }
    aa(“1234”);

    CODE:
    --------

  let aa = data=>
{
    var a=data;
    var l='';

   for(i=0;i<a.length-1;i++)
       {
   
          if((i%2)==0)
            {
   
                   var s=a[i+1]
                   var b=a[i]
                    l+=s
                    l+=b
         
            }
    }
   console.log(l);
}
   aa("1234")

  OUTPUT:
   -----------
  PS E:\fullstack-module1\basic1> node index1.js

        2143



     